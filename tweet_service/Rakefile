require 'sequel'
require 'yaml'
require 'rake'
require 'rspec/core/rake_task'
require 'rubygems'

desc "Load the environment"
task :environment do
  env = ENV['SINATRA_ENV'] || "deploy"

  database = YAML.load_file("config/database.yaml")[env]

  #ENV['database'] = "#{database["adapter"]}://#{database["user"]}:#{database["password"]}@#{database["host"]}:#{database["port"]}/#{database["database"]}"
  ENV['database'] = database['string']
  ENV['app'] = File.absolute_path("app.rb")
  ENV['port'] = '4568'
end

namespace :app do
  RSpec::Core::RakeTask.new(:spec) do |t|
    t.pattern = Dir.glob('spec/*_spec.rb')
  end
  desc "starts the tweet service"
  task(:run => :environment) do
    ruby ENV['app']
  end
  task(:test => [:environment, :spec]) do
  end
end

namespace :db do
  desc "Migrate the database"
  task(:migrate => :environment) do
    Sequel.connect(:adapter=>'postgres', :host=>'ec2-107-22-253-198.compute-1.amazonaws.com', :database=>'dd05tn6063hgsb', :user=>'iyqmrjwllheyvy', :password=>'68t2Sk9xEw4CsfDRE2g_N6uz9C').create_table :tweets do
      primary_key :tweet_id
      DateTime :created_at, :null=>false
      Bignum :user_id, :null=>false
      String :content, :null=>false
    end
  end
  desc "Drops the database"
  task(:drop => :environment) do
    begin
      Sequel.connect(ENV['database']).drop_table :tweets 
    rescue
    end
  end
  desc "Dummy data"				#generates dummy data
  task(:dummy => :environment) do
    require 'twitter'
    client = Twitter::Streaming::Client.new do |config|
      config.consumer_key        = "jtlS31wC95Xli3CZMO4OidTH1"
      config.consumer_secret     = "iCy6evhz0lGnOjNMCTnkxN5y9Cuh86ndyGpkIAX23HPIFCEdr3"
      config.access_token        = "74636828-qW06kurl1F2AtM2x23izzSCWWNUggpWkzjA2aqeJP"
      config.access_token_secret = "zsZR0CiT8PWkhOdSrXaVDRSVOWo4JuxOhjOmL2IkFz36o"
    end
    tweets = Sequel.connect(:adapter=>'postgres', :host=>'ec2-107-22-253-198.compute-1.amazonaws.com', :database=>'dd05tn6063hgsb', :user=>'iyqmrjwllheyvy', :password=>'68t2Sk9xEw4CsfDRE2g_N6uz9C').from(:tweets)
    client.sample do |tweet|
      if tweet.is_a?(Twitter::Tweet)
        tweets.insert(:created_at=>Time.now, :user_id=>tweet.user.id, :content=>tweet.text)
      end
    end
  end
end


